# Publishes to Maven Central using the new Central Portal system (central.sonatype.com)
# 
# Required GitHub Secrets:
# - CENTRAL_TOKEN_USERNAME: User token username from https://central.sonatype.com/account
# - CENTRAL_TOKEN_PASSWORD: User token password from https://central.sonatype.com/account  
# - GPG_PRIVATE_KEY: GPG private key for signing artifacts
# - GPG_PASSPHRASE: Passphrase for the GPG private key

name: Publish to Maven Central via Central Portal

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 4.1.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Set up Maven settings for Central Portal
      uses: s4u/maven-settings-action@v3.0.0
      with:
        servers: |
          [{
            "id": "central",
            "username": "${{ secrets.CENTRAL_TOKEN_USERNAME }}",
            "password": "${{ secrets.CENTRAL_TOKEN_PASSWORD }}"
          }]
          
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        
    - name: Set version from workflow dispatch
      if: github.event_name == 'workflow_dispatch'
      run: |
        mvn versions:set -DnewVersion=${{ github.event.inputs.version }}
        mvn versions:commit
        
    - name: Set version from release tag
      if: github.event_name == 'release'
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        mvn versions:set -DnewVersion=$VERSION
        mvn versions:commit
        
    - name: Run tests
      run: mvn clean test
      
    - name: Deploy to Maven Central via Central Portal
      run: mvn clean deploy -Prelease -DskipTests
      env:
        GPG_TTY: $(tty)
        
    - name: Create and push tag (workflow_dispatch only)
      if: github.event_name == 'workflow_dispatch'
      run: |
        git add pom.xml
        git commit -m "Release version ${{ github.event.inputs.version }}"
        git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
        git push origin v${{ github.event.inputs.version }}